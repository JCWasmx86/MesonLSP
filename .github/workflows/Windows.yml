name: Windows-CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  windows-573:
    runs-on: windows-2019
    steps:
      - name: Enable long paths on Windows
        shell: powershell
        run: |
          Set-ItemProperty -Path "HKLM:\\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1
      - name: Get page file information
        shell: powershell
        run: |
          wmic pagefile
      - name: Configure pagefile
        uses: al-cheb/configure-pagefile-action@v1.3
        with:
          minimum-size: 3GB
          maximum-size: 8GB
          disk-root: "D:"
      - name: Get page file information again
        shell: powershell
        run: |
          wmic pagefile
      - uses: compnerd/gha-setup-swift@main
        with:
          branch: swift-5.7.3-release
          tag: 5.7.3-RELEASE
      - uses: actions/checkout@v3
      - name: Build and test
        shell: powershell
        run: |
          cd ..\..
          git clone https://github.com/JCWasmx86/Swift-MesonLSP b
          cd b
          swift build -c release -v
          .\.build\release\Swift-MesonLSP.exe --test TestCases/BasicTests/meson.build
          .\.build\release\Swift-MesonLSP.exe --test TestCases/Options/meson.build
          .\.build\release\Swift-MesonLSP.exe --test TestCases/ComputeSubdirs/meson.build
          .\.build\release\Swift-MesonLSP.exe --test TestCases/ComputeSetVariable/meson.build
          mkdir __wrap_target
          .\.build\release\Swift-MesonLSP.exe --wrap Wraps\rustc-demangle.wrap --wrap Wraps/libswiftdemangle.wrap --wrap Wraps\libswiftdemangle2.wrap --wrap Wraps\miniz.wrap --wrap Wraps\turtle.wrap --wrap Wraps\sqlite.wrap --wrap Wraps\pango.wrap --wrap Wraps\turtle2.wrap --wrap Wraps\turtle3.wrap --wrap Wraps\rubberband.wrap --wrap-output __wrap_target --wrap-package-files .\Wraps\packagefiles
          $destinationFilePath = "$env:GITHUB_WORKSPACE\Artifacts"
          mkdir $destinationFilePath
          Copy-Item "C:\\Program Files\\swift\\runtime-development\\usr\\bin\\BlocksRuntime.dll" -Destination $destinationFilePath -Force
          Copy-Item "C:\\Program Files\\swift\\runtime-development\\usr\\bin\\dispatch.dll" -Destination $destinationFilePath -Force
          Copy-Item "C:\\Program Files\\swift\\runtime-development\\usr\\bin\\Foundation.dll" -Destination $destinationFilePath -Force
          Copy-Item "C:\\Program Files\\swift\\runtime-development\\usr\\bin\\swift_Concurrency.dll" -Destination $destinationFilePath -Force
          Copy-Item "C:\\Program Files\\swift\\runtime-development\\usr\\bin\\swiftCore.dll" -Destination $destinationFilePath -Force
          Copy-Item "C:\\Program Files\\swift\\runtime-development\\usr\\bin\\swiftCRT.dll" -Destination $destinationFilePath -Force
          Copy-Item "C:\\Program Files\\swift\\runtime-development\\usr\\bin\\swiftDispatch.dll" -Destination $destinationFilePath -Force
          Copy-Item "C:\\Program Files\\swift\\runtime-development\\usr\\bin\\swiftWinSDK.dll" -Destination $destinationFilePath -Force
          Copy-Item "C:\\Program Files\\swift\\icu-69.1\\usr\\bin\\icudt69.dll" -Destination $destinationFilePath -Force
          Copy-Item "C:\\Program Files\\swift\\icu-69.1\\usr\\bin\\icuin69.dll" -Destination $destinationFilePath -Force
          Copy-Item "C:\\Program Files\\swift\\icu-69.1\\usr\\bin\\icuuc69.dll" -Destination $destinationFilePath -Force
          $sourceFilePath = ".build\release\Swift-MesonLSP.exe"
          $destinationFilePath = "$env:GITHUB_WORKSPACE\Artifacts\Swift-MesonLSP.exe"
          Copy-Item -Path $sourceFilePath -Destination $destinationFilePath -Force
      - name: Create license bundle
        shell: bash
        run: |
          ./scripts/create_license_bundle.sh
          cp 3rdparty.txt Artifacts || true
          cp 3rdparty.txt ${{ github.workspace }}/Artifacts || true
      - uses: actions/upload-artifact@v3
        with:
          name: Windows
          path: ${{ github.workspace }}/Artifacts
  windows-58:
    runs-on: windows-2019
    steps:
      - uses: compnerd/gha-setup-swift@main
        with:
          branch: swift-5.8.1-release
          tag: 5.8.1-RELEASE
      - name: Enable long paths on Windows
        shell: powershell
        run: |
          Set-ItemProperty -Path "HKLM:\\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1
      - uses: actions/checkout@v3
      - run: |
          cd ..\..
          git clone https://github.com/JCWasmx86/Swift-MesonLSP b
          cd b
          swift build --static-swift-stdlib -c debug
          swift test
          .\.build\debug\Swift-MesonLSP.exe --test TestCases/BasicTests/meson.build
          .\.build\debug\Swift-MesonLSP.exe --test TestCases/Options/meson.build
          .\.build\debug\Swift-MesonLSP.exe --test TestCases/ComputeSubdirs/meson.build
          .\.build\debug\Swift-MesonLSP.exe --test TestCases/ComputeSetVariable/meson.build
          mkdir __wrap_target
          .\.build\debug\Swift-MesonLSP.exe --wrap Wraps\rustc-demangle.wrap --wrap Wraps/libswiftdemangle.wrap --wrap Wraps\libswiftdemangle2.wrap --wrap Wraps\miniz.wrap --wrap Wraps\turtle.wrap --wrap Wraps\sqlite.wrap --wrap Wraps\pango.wrap --wrap Wraps\turtle2.wrap --wrap Wraps\turtle3.wrap --wrap Wraps\rubberband.wrap --wrap-output __wrap_target --wrap-package-files .\Wraps\packagefiles
