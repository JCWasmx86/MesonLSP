name: Build on platforms
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
jobs:
  debian:
    strategy:
      matrix:
        version: ["trixie", "sid"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build on Debian ${{ matrix.version }}
        run: |
          sudo apt purge -y podman
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/Release.key | gpg --dearmor | sudo tee /etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg > /dev/null
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg] https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/ /" sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list > /dev/null
          sudo apt-get update
          sudo apt-get -y install podman
          podman --version
          DOCKER_BUILDKIT=1 docker build --network=host --file docker/Dockerfile.debian${{ matrix.version }} --output out .
          sudo cp out/mesonlsp-debian-static.zip /mesonlsp-debian-${{ matrix.version }}.zip
      - uses: actions/upload-artifact@v3
        with:
          name: mesonlsp-debian-${{ matrix.version }}.zip
          path: /mesonlsp-debian-${{ matrix.version }}.zip
  alpine:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Build on Alpine
        run: |
          sudo apt purge -y podman
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/Release.key | gpg --dearmor | sudo tee /etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg > /dev/null
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg] https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/ /" sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list > /dev/null
          sudo apt-get update
          sudo apt-get -y install podman
          podman --version
          DOCKER_BUILDKIT=1 docker build --network=host --file Dockerfile --output out .
          sudo cp out/mesonlsp-alpine-static.zip /mesonlsp-alpine-static.zip
      - uses: actions/upload-artifact@v3
        with:
          name: mesonlsp-alpine-static.zip
          path: /mesonlsp-alpine-static.zip
  macos:
    strategy:
      matrix:
        version: [12, 13, 14]
    runs-on: macos-${{ matrix.version }}
    steps:
      - uses: actions/checkout@v1
      - name: Build on macOS ${{ matrix.version }}
        run: |
          brew unlink pkg-config
          brew install zip google-benchmark libarchive googletest pkg-config curl pkgconf
          python3 -m pip install meson ninja
          export LDFLAGS="-L/opt/homebrew/opt/libarchive/lib"
          export CPPFLAGS="-I/opt/homebrew/opt/libarchive/include"
          export PKG_CONFIG_PATH="/opt/homebrew/opt/libarchive/lib/pkgconfig"
          brew link --overwrite pkg-config
          meson _build
          ninja -C _build
  fedora_in_container:
    strategy:
      matrix:
        version: [39, 40]
    runs-on: ubuntu-latest
    container:
      image: fedora:${{ matrix.version }}
    steps:
      - uses: actions/checkout@v1
      - name: Build on Fedora ${{ matrix.version }}
        run: |
          sudo dnf install zip ninja-build gcc g++ git pip libcurl-devel google-benchmark-devel glibc-static libarchive-devel gtest gtest-devel libpkgconf-devel libuuid-devel uuid python3-pip pkgconf-pkg-config -y
          pip install meson
          sudo dnf clean all
          ./scripts/ci_create_zip.sh Fedora${{ matrix.version }}
      - uses: actions/upload-artifact@v3
        with:
          name: Fedora${{ matrix.version }}.zip
          path: /Fedora${{ matrix.version }}.zip
