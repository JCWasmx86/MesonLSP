mesonanalyze_lib = static_library(
    'MesonAnalyze',
    'Checkers/Checker.swift',
    'Checkers/BuildTgtPathCheck.swift',
    'Checkers/DepGetConfigToolVariableCheck.swift',
    'Checkers/DepGetPkgConfigToolVariableCheck.swift',
    'Checkers/ExternalProgramPathCheck.swift',
    'Checkers/InstallSubdirCheck.swift',
    'Checkers/MesonBuildRootCheck.swift',
    'Checkers/MesonGetCrossPropertyCheck.swift',
    'Checkers/MesonHasExeWrapperCheck.swift',
    'Checkers/MesonSourceRootCheck.swift',
    'Checkers/GuiAppKwargCheck.swift',
    'Checkers/BuildAlwaysKwargCheck.swift',
    'Checkers/CheckerState.swift',
    'TypeAnalyzers/MesonTypeAnalyzer.swift',
    'TypeAnalyzers/DictGetTypeAnalyzer.swift',
    'TypeAnalyzers/ListGetTypeAnalyzer.swift',
    'TypeAnalyzers/SubprojectGetVariableTypeAnalyzer.swift',
    'TypeAnalyzers/OptionTypeAnalyzer.swift',
    'TypeAnalyzers/BuildTargetTypeAnalyzer.swift',
    'TypeAnalyzers/ImportTypeAnalyzer.swift',
    'TypeAnalyzers/TypeAnalyzersState.swift',
    'ExtendedCodeVisitor.swift',
    'Scope.swift',
    'Symbol.swift',
    'MesonMetadata.swift',
    'Diagnostic.swift',
    'HighlightSearcher.swift',
    'MemoryFile.swift',
    'SymbolVisitor.swift',
    'DeclarationFinder.swift',
    'ASTPatcher.swift',
    'Subproject/WrapBasedSubproject.swift',
    'Subproject/Subproject.swift',
    'Subproject/CachedSubproject.swift',
    'Subproject/FolderSubproject.swift',
    'Subproject/SubprojectState.swift',
    'SetVariableGuess.swift',
    'MesonOption.swift',
    'OptionsExtractor.swift',
    'OptionState.swift',
    'MesonTree.swift',
    'Version.swift',
    'MultiSubdirCall.swift',
    'SubdirCall.swift',
    'TypeAnalyzer.swift',
    dependencies: [
        logging_dep,
        mesonast_dep,
        wrap_dep,
        subproject('treesittermeson').get_variable('tree_sitter_meson_dep'),
    ],
    link_with: [
        timing_lib,
        subproject('treesittermeson').get_variable('tree_sitter_meson_lib'),
    ],
)
mesonanalyze_dep = declare_dependency(
    dependencies: [
        logging_dep,
        mesonast_dep,
        wrap_dep,
        subproject('treesittermeson').get_variable('tree_sitter_meson_dep'),
    ],
    link_with: [
        timing_lib,
        subproject('treesittermeson').get_variable('tree_sitter_meson_lib'),
        mesonanalyze_lib,
    ],
)
